name: Build & Publish
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  release:
    types: ["published"]
jobs:
  build-and-publish:
    env:
      AWS_REGION: us-east-1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Build with Gradle
        run: ./gradlew build
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
      - name: Build, tag, and push image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REGISTRY_ALIAS: y7h3y5m1
          REPOSITORY: app
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          echo "image=$REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
  deploy-to-dev:
    # if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
    runs-on: ubuntu-latest
    environment: 
      name: development
      url: https://www.google.com/
    needs: build-and-publish
    steps:
      - name: Deploy to development environment
        run: sleep 60
  deploy-to-prod:
    if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
    runs-on: ubuntu-latest
    environment: production
    needs: build-and-publish
    steps:
      - name: Deploy to production environment
        run: echo "Hello world"
